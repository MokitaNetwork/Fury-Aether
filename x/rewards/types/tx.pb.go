// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: aether/rewards/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateGauge struct {
	From            string                                  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	GaugeTypeId     uint64                                  `protobuf:"varint,2,opt,name=gauge_type_id,json=gaugeTypeId,proto3" json:"gauge_type_id,omitempty"`
	TriggerDuration time.Duration                           `protobuf:"bytes,3,opt,name=trigger_duration,json=triggerDuration,proto3,stdduration" json:"trigger_duration,omitempty" yaml:"trigger_duration"`
	DepositAmount   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,4,opt,name=deposit_amount,json=depositAmount,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"deposit_amount"`
	TotalTriggers   uint64                                  `protobuf:"varint,5,opt,name=total_triggers,json=totalTriggers,proto3" json:"total_triggers,omitempty"`
	StartTime       time.Time                               `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3,stdtime" json:"start_time" yaml:"start_time"`
	// Types that are valid to be assigned to Kind:
	//	*MsgCreateGauge_LiquidityMetaData
	Kind  isMsgCreateGauge_Kind `protobuf_oneof:"kind"`
	AppId uint64                `protobuf:"varint,8,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (m *MsgCreateGauge) Reset()         { *m = MsgCreateGauge{} }
func (m *MsgCreateGauge) String() string { return proto.CompactTextString(m) }
func (*MsgCreateGauge) ProtoMessage()    {}
func (*MsgCreateGauge) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{0}
}
func (m *MsgCreateGauge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateGauge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateGauge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateGauge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateGauge.Merge(m, src)
}
func (m *MsgCreateGauge) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateGauge) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateGauge.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateGauge proto.InternalMessageInfo

type isMsgCreateGauge_Kind interface {
	isMsgCreateGauge_Kind()
	MarshalTo([]byte) (int, error)
	Size() int
}

type MsgCreateGauge_LiquidityMetaData struct {
	LiquidityMetaData *LiquidtyGaugeMetaData `protobuf:"bytes,7,opt,name=liquidity_meta_data,json=liquidityMetaData,proto3,oneof" json:"liquidity_meta_data,omitempty"`
}

func (*MsgCreateGauge_LiquidityMetaData) isMsgCreateGauge_Kind() {}

func (m *MsgCreateGauge) GetKind() isMsgCreateGauge_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *MsgCreateGauge) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCreateGauge) GetGaugeTypeId() uint64 {
	if m != nil {
		return m.GaugeTypeId
	}
	return 0
}

func (m *MsgCreateGauge) GetTriggerDuration() time.Duration {
	if m != nil {
		return m.TriggerDuration
	}
	return 0
}

func (m *MsgCreateGauge) GetDepositAmount() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.DepositAmount
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *MsgCreateGauge) GetTotalTriggers() uint64 {
	if m != nil {
		return m.TotalTriggers
	}
	return 0
}

func (m *MsgCreateGauge) GetStartTime() time.Time {
	if m != nil {
		return m.StartTime
	}
	return time.Time{}
}

func (m *MsgCreateGauge) GetLiquidityMetaData() *LiquidtyGaugeMetaData {
	if x, ok := m.GetKind().(*MsgCreateGauge_LiquidityMetaData); ok {
		return x.LiquidityMetaData
	}
	return nil
}

func (m *MsgCreateGauge) GetAppId() uint64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MsgCreateGauge) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MsgCreateGauge_LiquidityMetaData)(nil),
	}
}

type MsgCreateGaugeResponse struct {
}

func (m *MsgCreateGaugeResponse) Reset()         { *m = MsgCreateGaugeResponse{} }
func (m *MsgCreateGaugeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateGaugeResponse) ProtoMessage()    {}
func (*MsgCreateGaugeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{1}
}
func (m *MsgCreateGaugeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateGaugeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateGaugeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateGaugeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateGaugeResponse.Merge(m, src)
}
func (m *MsgCreateGaugeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateGaugeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateGaugeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateGaugeResponse proto.InternalMessageInfo

type WhitelistAsset struct {
	AppMappingId uint64 `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	AssetId      uint64 `protobuf:"varint,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
}

func (m *WhitelistAsset) Reset()         { *m = WhitelistAsset{} }
func (m *WhitelistAsset) String() string { return proto.CompactTextString(m) }
func (*WhitelistAsset) ProtoMessage()    {}
func (*WhitelistAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{2}
}
func (m *WhitelistAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistAsset.Merge(m, src)
}
func (m *WhitelistAsset) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistAsset.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistAsset proto.InternalMessageInfo

func (m *WhitelistAsset) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *WhitelistAsset) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *WhitelistAsset) GetAssetId() uint64 {
	if m != nil {
		return m.AssetId
	}
	return 0
}

type RemoveWhitelistAsset struct {
	AppMappingId uint64 `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	AssetId      uint64 `protobuf:"varint,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
}

func (m *RemoveWhitelistAsset) Reset()         { *m = RemoveWhitelistAsset{} }
func (m *RemoveWhitelistAsset) String() string { return proto.CompactTextString(m) }
func (*RemoveWhitelistAsset) ProtoMessage()    {}
func (*RemoveWhitelistAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{3}
}
func (m *RemoveWhitelistAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveWhitelistAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveWhitelistAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveWhitelistAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWhitelistAsset.Merge(m, src)
}
func (m *RemoveWhitelistAsset) XXX_Size() int {
	return m.Size()
}
func (m *RemoveWhitelistAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWhitelistAsset.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWhitelistAsset proto.InternalMessageInfo

func (m *RemoveWhitelistAsset) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *RemoveWhitelistAsset) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RemoveWhitelistAsset) GetAssetId() uint64 {
	if m != nil {
		return m.AssetId
	}
	return 0
}

type MsgWhitelistAssetResponse struct {
}

func (m *MsgWhitelistAssetResponse) Reset()         { *m = MsgWhitelistAssetResponse{} }
func (m *MsgWhitelistAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistAssetResponse) ProtoMessage()    {}
func (*MsgWhitelistAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{4}
}
func (m *MsgWhitelistAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistAssetResponse.Merge(m, src)
}
func (m *MsgWhitelistAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistAssetResponse proto.InternalMessageInfo

type MsgRemoveWhitelistAssetResponse struct {
}

func (m *MsgRemoveWhitelistAssetResponse) Reset()         { *m = MsgRemoveWhitelistAssetResponse{} }
func (m *MsgRemoveWhitelistAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveWhitelistAssetResponse) ProtoMessage()    {}
func (*MsgRemoveWhitelistAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{5}
}
func (m *MsgRemoveWhitelistAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveWhitelistAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveWhitelistAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveWhitelistAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveWhitelistAssetResponse.Merge(m, src)
}
func (m *MsgRemoveWhitelistAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveWhitelistAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveWhitelistAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveWhitelistAssetResponse proto.InternalMessageInfo

type WhitelistAppIdVault struct {
	AppMappingId uint64 `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id_vault"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
}

func (m *WhitelistAppIdVault) Reset()         { *m = WhitelistAppIdVault{} }
func (m *WhitelistAppIdVault) String() string { return proto.CompactTextString(m) }
func (*WhitelistAppIdVault) ProtoMessage()    {}
func (*WhitelistAppIdVault) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{6}
}
func (m *WhitelistAppIdVault) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WhitelistAppIdVault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WhitelistAppIdVault.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WhitelistAppIdVault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhitelistAppIdVault.Merge(m, src)
}
func (m *WhitelistAppIdVault) XXX_Size() int {
	return m.Size()
}
func (m *WhitelistAppIdVault) XXX_DiscardUnknown() {
	xxx_messageInfo_WhitelistAppIdVault.DiscardUnknown(m)
}

var xxx_messageInfo_WhitelistAppIdVault proto.InternalMessageInfo

func (m *WhitelistAppIdVault) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *WhitelistAppIdVault) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type RemoveWhitelistAppIdVault struct {
	AppMappingId uint64 `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id_vault"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
}

func (m *RemoveWhitelistAppIdVault) Reset()         { *m = RemoveWhitelistAppIdVault{} }
func (m *RemoveWhitelistAppIdVault) String() string { return proto.CompactTextString(m) }
func (*RemoveWhitelistAppIdVault) ProtoMessage()    {}
func (*RemoveWhitelistAppIdVault) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{7}
}
func (m *RemoveWhitelistAppIdVault) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveWhitelistAppIdVault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveWhitelistAppIdVault.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveWhitelistAppIdVault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWhitelistAppIdVault.Merge(m, src)
}
func (m *RemoveWhitelistAppIdVault) XXX_Size() int {
	return m.Size()
}
func (m *RemoveWhitelistAppIdVault) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWhitelistAppIdVault.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWhitelistAppIdVault proto.InternalMessageInfo

func (m *RemoveWhitelistAppIdVault) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *RemoveWhitelistAppIdVault) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type MsgWhitelistAppIdVaultResponse struct {
}

func (m *MsgWhitelistAppIdVaultResponse) Reset()         { *m = MsgWhitelistAppIdVaultResponse{} }
func (m *MsgWhitelistAppIdVaultResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistAppIdVaultResponse) ProtoMessage()    {}
func (*MsgWhitelistAppIdVaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{8}
}
func (m *MsgWhitelistAppIdVaultResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistAppIdVaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistAppIdVaultResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistAppIdVaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistAppIdVaultResponse.Merge(m, src)
}
func (m *MsgWhitelistAppIdVaultResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistAppIdVaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistAppIdVaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistAppIdVaultResponse proto.InternalMessageInfo

type MsgRemoveWhitelistAppIdVaultResponse struct {
}

func (m *MsgRemoveWhitelistAppIdVaultResponse) Reset()         { *m = MsgRemoveWhitelistAppIdVaultResponse{} }
func (m *MsgRemoveWhitelistAppIdVaultResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveWhitelistAppIdVaultResponse) ProtoMessage()    {}
func (*MsgRemoveWhitelistAppIdVaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{9}
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveWhitelistAppIdVaultResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveWhitelistAppIdVaultResponse.Merge(m, src)
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveWhitelistAppIdVaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveWhitelistAppIdVaultResponse proto.InternalMessageInfo

type ActivateExternalRewardsLockers struct {
	AppMappingId         uint64                                  `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id"`
	AssetId              uint64                                  `protobuf:"varint,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
	TotalRewards         github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=total_rewards,json=totalRewards,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"total_rewards" yaml:"total_rewards"`
	DurationDays         int64                                   `protobuf:"varint,4,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty" yaml:"duration_days"`
	Depositor            string                                  `protobuf:"bytes,5,opt,name=depositor,proto3" json:"depositor,omitempty" yaml:"depositor"`
	MinLockupTimeSeconds int64                                   `protobuf:"varint,6,opt,name=min_lockup_time_seconds,json=minLockupTimeSeconds,proto3" json:"min_lockup_time_seconds,omitempty" yaml:"min_lockup_time_seconds"`
}

func (m *ActivateExternalRewardsLockers) Reset()         { *m = ActivateExternalRewardsLockers{} }
func (m *ActivateExternalRewardsLockers) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsLockers) ProtoMessage()    {}
func (*ActivateExternalRewardsLockers) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{10}
}
func (m *ActivateExternalRewardsLockers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsLockers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsLockers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsLockers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsLockers.Merge(m, src)
}
func (m *ActivateExternalRewardsLockers) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsLockers) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsLockers.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsLockers proto.InternalMessageInfo

func (m *ActivateExternalRewardsLockers) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *ActivateExternalRewardsLockers) GetAssetId() uint64 {
	if m != nil {
		return m.AssetId
	}
	return 0
}

func (m *ActivateExternalRewardsLockers) GetTotalRewards() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.TotalRewards
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *ActivateExternalRewardsLockers) GetDurationDays() int64 {
	if m != nil {
		return m.DurationDays
	}
	return 0
}

func (m *ActivateExternalRewardsLockers) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *ActivateExternalRewardsLockers) GetMinLockupTimeSeconds() int64 {
	if m != nil {
		return m.MinLockupTimeSeconds
	}
	return 0
}

type ActivateExternalRewardsLockersResponse struct {
}

func (m *ActivateExternalRewardsLockersResponse) Reset() {
	*m = ActivateExternalRewardsLockersResponse{}
}
func (m *ActivateExternalRewardsLockersResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsLockersResponse) ProtoMessage()    {}
func (*ActivateExternalRewardsLockersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{11}
}
func (m *ActivateExternalRewardsLockersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsLockersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsLockersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsLockersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsLockersResponse.Merge(m, src)
}
func (m *ActivateExternalRewardsLockersResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsLockersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsLockersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsLockersResponse proto.InternalMessageInfo

type ActivateExternalRewardsVault struct {
	AppMappingId         uint64                                  `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id"`
	ExtendedPairId       uint64                                  `protobuf:"varint,2,opt,name=extended_pair_id,json=extendedPairId,proto3" json:"extended_pair_id,omitempty" yaml:"extended_Pair_id"`
	TotalRewards         github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=total_rewards,json=totalRewards,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"total_rewards" yaml:"total_rewards"`
	DurationDays         int64                                   `protobuf:"varint,4,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty" yaml:"duration_days"`
	Depositor            string                                  `protobuf:"bytes,5,opt,name=depositor,proto3" json:"depositor,omitempty" yaml:"depositor"`
	MinLockupTimeSeconds int64                                   `protobuf:"varint,6,opt,name=min_lockup_time_seconds,json=minLockupTimeSeconds,proto3" json:"min_lockup_time_seconds,omitempty" yaml:"min_lockup_time_seconds"`
}

func (m *ActivateExternalRewardsVault) Reset()         { *m = ActivateExternalRewardsVault{} }
func (m *ActivateExternalRewardsVault) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsVault) ProtoMessage()    {}
func (*ActivateExternalRewardsVault) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{12}
}
func (m *ActivateExternalRewardsVault) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsVault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsVault.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsVault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsVault.Merge(m, src)
}
func (m *ActivateExternalRewardsVault) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsVault) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsVault.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsVault proto.InternalMessageInfo

func (m *ActivateExternalRewardsVault) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *ActivateExternalRewardsVault) GetExtendedPairId() uint64 {
	if m != nil {
		return m.ExtendedPairId
	}
	return 0
}

func (m *ActivateExternalRewardsVault) GetTotalRewards() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.TotalRewards
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *ActivateExternalRewardsVault) GetDurationDays() int64 {
	if m != nil {
		return m.DurationDays
	}
	return 0
}

func (m *ActivateExternalRewardsVault) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

func (m *ActivateExternalRewardsVault) GetMinLockupTimeSeconds() int64 {
	if m != nil {
		return m.MinLockupTimeSeconds
	}
	return 0
}

type ActivateExternalRewardsVaultResponse struct {
}

func (m *ActivateExternalRewardsVaultResponse) Reset()         { *m = ActivateExternalRewardsVaultResponse{} }
func (m *ActivateExternalRewardsVaultResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsVaultResponse) ProtoMessage()    {}
func (*ActivateExternalRewardsVaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{13}
}
func (m *ActivateExternalRewardsVaultResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsVaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsVaultResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsVaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsVaultResponse.Merge(m, src)
}
func (m *ActivateExternalRewardsVaultResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsVaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsVaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsVaultResponse proto.InternalMessageInfo

type ActivateExternalRewardsLend struct {
	AppMappingId         uint64                                  `protobuf:"varint,1,opt,name=app_mapping_id,json=appMappingId,proto3" json:"app_mapping_id,omitempty" yaml:"app_mapping_id"`
	CPoolId              uint64                                  `protobuf:"varint,2,opt,name=c_pool_id,json=cPoolId,proto3" json:"c_pool_id,omitempty" yaml:"c_pool_id"`
	AssetId              []uint64                                `protobuf:"varint,3,rep,packed,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty" yaml:"asset_id"`
	CSwapAppId           uint64                                  `protobuf:"varint,4,opt,name=c_swap_app_id,json=cSwapAppId,proto3" json:"c_swap_app_id,omitempty" yaml:"c_swap_app_id"`
	CSwapMinLockAmount   uint64                                  `protobuf:"varint,5,opt,name=c_swap_min_lock_amount,json=cSwapMinLockAmount,proto3" json:"c_swap_min_lock_amount,omitempty" yaml:"c_swap_app_id"`
	TotalRewards         github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,6,opt,name=total_rewards,json=totalRewards,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin" json:"total_rewards" yaml:"total_rewards"`
	MasterPoolId         int64                                   `protobuf:"varint,7,opt,name=master_pool_id,json=masterPoolId,proto3" json:"master_pool_id,omitempty" yaml:"master_pool_id"`
	DurationDays         int64                                   `protobuf:"varint,8,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty" yaml:"duration_days"`
	MinLockupTimeSeconds int64                                   `protobuf:"varint,9,opt,name=min_lockup_time_seconds,json=minLockupTimeSeconds,proto3" json:"min_lockup_time_seconds,omitempty" yaml:"min_lockup_time_seconds"`
	Depositor            string                                  `protobuf:"bytes,10,opt,name=depositor,proto3" json:"depositor,omitempty" yaml:"depositor"`
}

func (m *ActivateExternalRewardsLend) Reset()         { *m = ActivateExternalRewardsLend{} }
func (m *ActivateExternalRewardsLend) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsLend) ProtoMessage()    {}
func (*ActivateExternalRewardsLend) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{14}
}
func (m *ActivateExternalRewardsLend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsLend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsLend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsLend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsLend.Merge(m, src)
}
func (m *ActivateExternalRewardsLend) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsLend) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsLend.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsLend proto.InternalMessageInfo

func (m *ActivateExternalRewardsLend) GetAppMappingId() uint64 {
	if m != nil {
		return m.AppMappingId
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetCPoolId() uint64 {
	if m != nil {
		return m.CPoolId
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetAssetId() []uint64 {
	if m != nil {
		return m.AssetId
	}
	return nil
}

func (m *ActivateExternalRewardsLend) GetCSwapAppId() uint64 {
	if m != nil {
		return m.CSwapAppId
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetCSwapMinLockAmount() uint64 {
	if m != nil {
		return m.CSwapMinLockAmount
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetTotalRewards() github_com_cosmos_cosmos_sdk_types.Coin {
	if m != nil {
		return m.TotalRewards
	}
	return github_com_cosmos_cosmos_sdk_types.Coin{}
}

func (m *ActivateExternalRewardsLend) GetMasterPoolId() int64 {
	if m != nil {
		return m.MasterPoolId
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetDurationDays() int64 {
	if m != nil {
		return m.DurationDays
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetMinLockupTimeSeconds() int64 {
	if m != nil {
		return m.MinLockupTimeSeconds
	}
	return 0
}

func (m *ActivateExternalRewardsLend) GetDepositor() string {
	if m != nil {
		return m.Depositor
	}
	return ""
}

type ActivateExternalRewardsLendResponse struct {
}

func (m *ActivateExternalRewardsLendResponse) Reset()         { *m = ActivateExternalRewardsLendResponse{} }
func (m *ActivateExternalRewardsLendResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateExternalRewardsLendResponse) ProtoMessage()    {}
func (*ActivateExternalRewardsLendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67a3760e316d707d, []int{15}
}
func (m *ActivateExternalRewardsLendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActivateExternalRewardsLendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActivateExternalRewardsLendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActivateExternalRewardsLendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateExternalRewardsLendResponse.Merge(m, src)
}
func (m *ActivateExternalRewardsLendResponse) XXX_Size() int {
	return m.Size()
}
func (m *ActivateExternalRewardsLendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateExternalRewardsLendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateExternalRewardsLendResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateGauge)(nil), "aether.rewards.v1beta1.MsgCreateGauge")
	proto.RegisterType((*MsgCreateGaugeResponse)(nil), "aether.rewards.v1beta1.MsgCreateGaugeResponse")
	proto.RegisterType((*WhitelistAsset)(nil), "aether.rewards.v1beta1.WhitelistAsset")
	proto.RegisterType((*RemoveWhitelistAsset)(nil), "aether.rewards.v1beta1.RemoveWhitelistAsset")
	proto.RegisterType((*MsgWhitelistAssetResponse)(nil), "aether.rewards.v1beta1.MsgWhitelistAssetResponse")
	proto.RegisterType((*MsgRemoveWhitelistAssetResponse)(nil), "aether.rewards.v1beta1.MsgRemoveWhitelistAssetResponse")
	proto.RegisterType((*WhitelistAppIdVault)(nil), "aether.rewards.v1beta1.WhitelistAppIdVault")
	proto.RegisterType((*RemoveWhitelistAppIdVault)(nil), "aether.rewards.v1beta1.RemoveWhitelistAppIdVault")
	proto.RegisterType((*MsgWhitelistAppIdVaultResponse)(nil), "aether.rewards.v1beta1.MsgWhitelistAppIdVaultResponse")
	proto.RegisterType((*MsgRemoveWhitelistAppIdVaultResponse)(nil), "aether.rewards.v1beta1.MsgRemoveWhitelistAppIdVaultResponse")
	proto.RegisterType((*ActivateExternalRewardsLockers)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsLockers")
	proto.RegisterType((*ActivateExternalRewardsLockersResponse)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsLockersResponse")
	proto.RegisterType((*ActivateExternalRewardsVault)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsVault")
	proto.RegisterType((*ActivateExternalRewardsVaultResponse)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsVaultResponse")
	proto.RegisterType((*ActivateExternalRewardsLend)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsLend")
	proto.RegisterType((*ActivateExternalRewardsLendResponse)(nil), "aether.rewards.v1beta1.ActivateExternalRewardsLendResponse")
}

func init() { proto.RegisterFile("aether/rewards/v1beta1/tx.proto", fileDescriptor_67a3760e316d707d) }

var fileDescriptor_67a3760e316d707d = []byte{
	// 1193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4d, 0x4f, 0x1b, 0x47,
	0x18, 0x66, 0xb1, 0xf9, 0xf0, 0x00, 0x86, 0x2c, 0x0e, 0x31, 0xa6, 0xf5, 0xd2, 0x49, 0x42, 0x39,
	0x34, 0xbb, 0x0d, 0xa9, 0x7a, 0x68, 0xda, 0x46, 0x38, 0xa0, 0x14, 0x09, 0x4b, 0xd1, 0x06, 0xf5,
	0xeb, 0xb2, 0x1a, 0xbc, 0x93, 0x65, 0x65, 0xef, 0xce, 0x66, 0x67, 0x0c, 0xf8, 0xd8, 0x13, 0x52,
	0x4f, 0x9c, 0xaa, 0xfe, 0x82, 0x9e, 0xfa, 0x43, 0x72, 0xcc, 0xad, 0x3d, 0x6d, 0x2b, 0xe8, 0xa5,
	0x3d, 0xfa, 0xd8, 0x43, 0x55, 0xcd, 0xec, 0xec, 0xda, 0x06, 0xdb, 0x04, 0x50, 0x15, 0x55, 0xca,
	0xc9, 0xde, 0xf7, 0x6b, 0x9e, 0x79, 0xdf, 0x67, 0x9e, 0x9d, 0x05, 0x1a, 0xc2, 0x6c, 0x0f, 0x87,
	0x46, 0x88, 0x0f, 0x50, 0x68, 0x53, 0x63, 0xff, 0xfe, 0x2e, 0x66, 0xe8, 0xbe, 0xc1, 0x0e, 0xf5,
	0x20, 0x24, 0x8c, 0xa8, 0x0b, 0x71, 0x80, 0x2e, 0x03, 0x74, 0x19, 0x50, 0x2a, 0x38, 0xc4, 0x21,
	0x22, 0xc4, 0xe0, 0xff, 0xe2, 0xe8, 0x52, 0xb9, 0x46, 0xa8, 0x47, 0xa8, 0xb1, 0x8b, 0x28, 0x4e,
	0x6b, 0xd5, 0x88, 0xeb, 0x27, 0x7e, 0x87, 0x10, 0xa7, 0x81, 0x0d, 0xf1, 0xb4, 0xdb, 0x7c, 0x6e,
	0xd8, 0xcd, 0x10, 0x31, 0x97, 0x24, 0x7e, 0x38, 0x00, 0x8e, 0x83, 0x9a, 0x0e, 0x96, 0x31, 0xda,
	0xd9, 0x1a, 0xcc, 0xf5, 0x30, 0x65, 0xc8, 0x0b, 0xe2, 0x00, 0xf8, 0x4b, 0x16, 0xe4, 0xab, 0xd4,
	0x79, 0x1c, 0x62, 0xc4, 0xf0, 0x13, 0x9e, 0xa9, 0xde, 0x06, 0xd9, 0xe7, 0x21, 0xf1, 0x8a, 0xca,
	0xb2, 0xb2, 0x9a, 0xab, 0xcc, 0xb6, 0x23, 0x6d, 0xaa, 0x85, 0xbc, 0xc6, 0x27, 0x90, 0x5b, 0xa1,
	0x29, 0x9c, 0x2a, 0x04, 0x33, 0x62, 0x1d, 0x8b, 0xb5, 0x02, 0x6c, 0xb9, 0x76, 0x71, 0x74, 0x59,
	0x59, 0xcd, 0x9a, 0x53, 0xc2, 0xb8, 0xd3, 0x0a, 0xf0, 0x96, 0xad, 0x1e, 0x29, 0x60, 0x8e, 0x85,
	0xae, 0xe3, 0xe0, 0xd0, 0x4a, 0xb0, 0x17, 0x33, 0xcb, 0xca, 0xea, 0xd4, 0xda, 0xa2, 0x1e, 0x03,
	0xd3, 0x13, 0x60, 0xfa, 0x86, 0x0c, 0xa8, 0xac, 0xbf, 0x8c, 0xb4, 0x91, 0xbf, 0x22, 0xad, 0x74,
	0x36, 0xf5, 0x03, 0xe2, 0xb9, 0x0c, 0x7b, 0x01, 0x6b, 0xb5, 0x23, 0xed, 0x56, 0x0c, 0xe9, 0x6c,
	0x0c, 0xfc, 0xf1, 0x37, 0x4d, 0x31, 0x67, 0xa5, 0x39, 0xa9, 0xa9, 0xbe, 0x00, 0x79, 0x1b, 0x07,
	0x84, 0xba, 0xcc, 0x42, 0x1e, 0x69, 0xfa, 0xac, 0x98, 0x95, 0x30, 0xe2, 0x19, 0xe8, 0x7c, 0x06,
	0xc9, 0xb8, 0xf4, 0xc7, 0xc4, 0xf5, 0x2b, 0x06, 0x87, 0xf1, 0x77, 0xa4, 0xbd, 0xef, 0xb8, 0x6c,
	0xaf, 0xb9, 0xab, 0xd7, 0x88, 0x67, 0xc8, 0x81, 0xc5, 0x3f, 0xf7, 0xa8, 0x5d, 0x37, 0xf8, 0xee,
	0xa9, 0x48, 0x30, 0x67, 0xe4, 0x0a, 0xeb, 0x62, 0x01, 0xf5, 0x2e, 0xc8, 0x33, 0xc2, 0x50, 0xc3,
	0x92, 0x58, 0x68, 0x71, 0x4c, 0x74, 0x68, 0x46, 0x58, 0x77, 0xa4, 0x51, 0xfd, 0x1a, 0x00, 0xca,
	0x50, 0xc8, 0x2c, 0x3e, 0x98, 0xe2, 0xb8, 0x40, 0x55, 0x3a, 0xd7, 0x9c, 0x9d, 0x64, 0x6a, 0x95,
	0x77, 0x39, 0xac, 0x76, 0xa4, 0xdd, 0x88, 0xf7, 0xdf, 0xc9, 0x85, 0xc7, 0x7c, 0xe7, 0x39, 0x61,
	0xe0, 0xe1, 0xaa, 0x05, 0xe6, 0x1b, 0xee, 0x8b, 0xa6, 0x6b, 0xbb, 0xac, 0x65, 0x79, 0x98, 0x21,
	0xcb, 0x46, 0x0c, 0x15, 0x27, 0xc4, 0x12, 0xf7, 0xf4, 0xfe, 0x54, 0xd5, 0xb7, 0x45, 0x0a, 0x6b,
	0x09, 0x2a, 0x54, 0x31, 0x43, 0x1b, 0x88, 0xa1, 0x2f, 0x46, 0xcc, 0x1b, 0x69, 0xad, 0xc4, 0xa8,
	0xde, 0x04, 0xe3, 0x28, 0x08, 0xf8, 0xec, 0x27, 0xc5, 0xce, 0xc6, 0x50, 0x10, 0x6c, 0xd9, 0x95,
	0x71, 0x90, 0xad, 0xbb, 0xbe, 0x0d, 0x8b, 0x60, 0xa1, 0x97, 0x58, 0x26, 0xa6, 0x01, 0xf1, 0x29,
	0x86, 0x3f, 0x29, 0x20, 0xff, 0xd5, 0x9e, 0xcb, 0x70, 0xc3, 0xa5, 0x6c, 0x9d, 0x52, 0xcc, 0xd4,
	0x47, 0x20, 0xcf, 0x6b, 0x79, 0x28, 0x08, 0x5c, 0xdf, 0xe1, 0x35, 0x39, 0xfb, 0xb2, 0x95, 0xc5,
	0x76, 0xa4, 0xdd, 0x8c, 0xb7, 0xda, 0xeb, 0x87, 0xe6, 0x34, 0x0a, 0x82, 0x6a, 0xfc, 0xbc, 0x65,
	0xa7, 0xa4, 0x1d, 0x1d, 0x46, 0x5a, 0x1d, 0x4c, 0x22, 0xbe, 0x1c, 0xaf, 0x9f, 0x11, 0xf5, 0xe7,
	0xdb, 0x91, 0x36, 0x2b, 0xeb, 0x4b, 0x0f, 0x34, 0x27, 0xc4, 0xdf, 0x2d, 0x1b, 0xfe, 0xac, 0x80,
	0x82, 0x89, 0x3d, 0xb2, 0x8f, 0xff, 0x17, 0x70, 0x97, 0xc0, 0x62, 0x95, 0x3a, 0xbd, 0x50, 0xd3,
	0xa6, 0xbf, 0x07, 0xb4, 0x2a, 0x75, 0xfa, 0xed, 0x26, 0x0d, 0xf9, 0x4e, 0x01, 0xf3, 0x1d, 0x17,
	0x1f, 0xe6, 0x97, 0xa8, 0xd9, 0x60, 0xea, 0xe6, 0x80, 0xdd, 0x6a, 0xed, 0x48, 0x5b, 0xea, 0xb7,
	0x5b, 0x6b, 0x9f, 0xe7, 0x5d, 0x65, 0xcf, 0xf0, 0x48, 0x01, 0x8b, 0x67, 0x41, 0xbe, 0x19, 0x24,
	0xcb, 0xa0, 0xdc, 0xd3, 0xcd, 0x14, 0x45, 0xda, 0xaf, 0x15, 0x70, 0xa7, 0x4f, 0x4b, 0xcf, 0xc7,
	0xfd, 0x99, 0x01, 0xe5, 0xf5, 0x1a, 0x73, 0xf7, 0x11, 0xc3, 0x9b, 0x87, 0x0c, 0x87, 0x3e, 0x6a,
	0x98, 0xf1, 0xb9, 0xdb, 0x26, 0xb5, 0x3a, 0x97, 0x81, 0x6b, 0x13, 0xaa, 0x9b, 0x2b, 0xa3, 0x17,
	0x73, 0x85, 0x6b, 0x73, 0xac, 0x44, 0x96, 0x54, 0x80, 0x54, 0x98, 0x07, 0x2a, 0xe2, 0x13, 0x29,
	0x3d, 0x05, 0x29, 0xbd, 0xdd, 0xd9, 0xf0, 0x32, 0x4a, 0x39, 0x2d, 0x52, 0x65, 0x07, 0xd4, 0xcf,
	0xc0, 0x4c, 0xa2, 0xde, 0x96, 0x8d, 0x5a, 0x54, 0x48, 0x73, 0xa6, 0x52, 0xec, 0xac, 0xd4, 0xe3,
	0x86, 0xe6, 0x74, 0xf2, 0xbc, 0x81, 0x5a, 0x54, 0x5d, 0x03, 0x39, 0x29, 0xbc, 0x24, 0x14, 0x12,
	0x9b, 0xab, 0x14, 0xda, 0x91, 0x36, 0x27, 0x53, 0x13, 0x17, 0x34, 0x3b, 0x61, 0xea, 0x37, 0xe0,
	0x96, 0xe7, 0xfa, 0x56, 0x83, 0xd4, 0xea, 0xcd, 0x40, 0xa8, 0xa7, 0x45, 0x71, 0x8d, 0xf8, 0x36,
	0x15, 0x0a, 0x9c, 0xa9, 0xc0, 0x76, 0xa4, 0x95, 0xe3, 0x0a, 0x03, 0x02, 0xa1, 0x59, 0xf0, 0x5c,
	0x7f, 0x5b, 0x38, 0xb8, 0xdc, 0x3e, 0x93, 0xe6, 0x55, 0xb0, 0x32, 0x7c, 0xd4, 0x29, 0x2b, 0xfe,
	0xc9, 0x80, 0x77, 0x06, 0x84, 0xc6, 0x64, 0xbf, 0x36, 0x27, 0x36, 0xc1, 0x1c, 0x3e, 0x64, 0xd8,
	0xb7, 0xb1, 0x6d, 0x05, 0xc8, 0x0d, 0x3b, 0xdc, 0x58, 0xea, 0xbc, 0x41, 0xd3, 0x88, 0xa7, 0x71,
	0x04, 0x34, 0xf3, 0x89, 0x89, 0x5b, 0xde, 0x52, 0xe5, 0x3f, 0xa3, 0xca, 0x0a, 0xb8, 0x33, 0x6c,
	0xfe, 0x29, 0x51, 0xfe, 0x18, 0x03, 0x4b, 0x83, 0x38, 0x85, 0x7d, 0xfb, 0xfa, 0x3c, 0xf9, 0x10,
	0xe4, 0x6a, 0x56, 0x40, 0x48, 0xa3, 0x43, 0x90, 0xae, 0xbe, 0xa4, 0x2e, 0x68, 0x4e, 0xd4, 0x9e,
	0x12, 0xd2, 0x38, 0xa3, 0x36, 0x99, 0xe5, 0xcc, 0x85, 0x6a, 0xf3, 0x10, 0xcc, 0xd4, 0x2c, 0x7a,
	0x80, 0x02, 0x4b, 0xde, 0x18, 0xb2, 0x62, 0x95, 0xae, 0xc1, 0xf5, 0xb8, 0xa1, 0x09, 0x6a, 0xcf,
	0x0e, 0x50, 0x20, 0xb4, 0x54, 0xdd, 0x06, 0x0b, 0xd2, 0x9b, 0x34, 0x38, 0xb9, 0xc4, 0x8d, 0x5d,
	0x50, 0x45, 0x15, 0x55, 0xaa, 0x71, 0xf3, 0xe5, 0xbd, 0xec, 0x3c, 0x9b, 0xc7, 0xdf, 0x10, 0x9b,
	0x1f, 0x81, 0xbc, 0x87, 0x28, 0xc3, 0x61, 0xda, 0xfb, 0x09, 0xc1, 0xa8, 0xae, 0xb9, 0xf5, 0xfa,
	0xa1, 0x39, 0x1d, 0x1b, 0xe4, 0x14, 0xce, 0x1d, 0x87, 0xc9, 0x4b, 0x1d, 0x87, 0x21, 0xd4, 0xce,
	0x5d, 0x8f, 0xda, 0xbd, 0x27, 0x0d, 0xbc, 0xd6, 0x49, 0x83, 0x77, 0xc1, 0xed, 0x21, 0x2c, 0x4f,
	0x4e, 0xc3, 0xda, 0x0f, 0x59, 0x90, 0xa9, 0x52, 0x47, 0xc5, 0x60, 0xaa, 0xfb, 0xa3, 0x65, 0x65,
	0xd0, 0x85, 0xb6, 0xf7, 0x0e, 0x5a, 0xd2, 0x5f, 0x2f, 0x2e, 0x59, 0x4e, 0x3d, 0x56, 0xc0, 0xc2,
	0x80, 0x77, 0xf6, 0xc7, 0x83, 0x4a, 0x0d, 0x7f, 0x01, 0x94, 0x3e, 0xbf, 0x5a, 0x5e, 0x0a, 0xe9,
	0x7b, 0x05, 0x14, 0xfa, 0xbe, 0x30, 0x3e, 0xba, 0x64, 0x61, 0x91, 0x55, 0xfa, 0xf4, 0x2a, 0x59,
	0x29, 0x98, 0x23, 0x05, 0xcc, 0xf7, 0x13, 0xa5, 0x07, 0x97, 0xdd, 0x24, 0xf6, 0xed, 0xd2, 0xc3,
	0x2b, 0x24, 0x25, 0x48, 0x2a, 0x5b, 0x2f, 0x4f, 0xca, 0xca, 0xab, 0x93, 0xb2, 0xf2, 0xfb, 0x49,
	0x59, 0x39, 0x3e, 0x2d, 0x8f, 0xbc, 0x3a, 0x2d, 0x8f, 0xfc, 0x7a, 0x5a, 0x1e, 0xf9, 0xd6, 0xe8,
	0x3a, 0x9f, 0x1e, 0xa9, 0xbb, 0x0c, 0xf9, 0x98, 0x1d, 0x90, 0xb0, 0x6e, 0xc8, 0x2f, 0xe8, 0xc3,
	0xf4, 0x1b, 0x5a, 0x1c, 0xd6, 0xdd, 0x71, 0xf1, 0xe1, 0xf5, 0xe0, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x7c, 0xef, 0x99, 0xef, 0xf1, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateGauge(ctx context.Context, in *MsgCreateGauge, opts ...grpc.CallOption) (*MsgCreateGaugeResponse, error)
	ExternalRewardsLockers(ctx context.Context, in *ActivateExternalRewardsLockers, opts ...grpc.CallOption) (*ActivateExternalRewardsLockersResponse, error)
	ExternalRewardsVault(ctx context.Context, in *ActivateExternalRewardsVault, opts ...grpc.CallOption) (*ActivateExternalRewardsVaultResponse, error)
	ExternalRewardsLend(ctx context.Context, in *ActivateExternalRewardsLend, opts ...grpc.CallOption) (*ActivateExternalRewardsLendResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateGauge(ctx context.Context, in *MsgCreateGauge, opts ...grpc.CallOption) (*MsgCreateGaugeResponse, error) {
	out := new(MsgCreateGaugeResponse)
	err := c.cc.Invoke(ctx, "/aether.rewards.v1beta1.Msg/CreateGauge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExternalRewardsLockers(ctx context.Context, in *ActivateExternalRewardsLockers, opts ...grpc.CallOption) (*ActivateExternalRewardsLockersResponse, error) {
	out := new(ActivateExternalRewardsLockersResponse)
	err := c.cc.Invoke(ctx, "/aether.rewards.v1beta1.Msg/ExternalRewardsLockers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExternalRewardsVault(ctx context.Context, in *ActivateExternalRewardsVault, opts ...grpc.CallOption) (*ActivateExternalRewardsVaultResponse, error) {
	out := new(ActivateExternalRewardsVaultResponse)
	err := c.cc.Invoke(ctx, "/aether.rewards.v1beta1.Msg/ExternalRewardsVault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExternalRewardsLend(ctx context.Context, in *ActivateExternalRewardsLend, opts ...grpc.CallOption) (*ActivateExternalRewardsLendResponse, error) {
	out := new(ActivateExternalRewardsLendResponse)
	err := c.cc.Invoke(ctx, "/aether.rewards.v1beta1.Msg/ExternalRewardsLend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateGauge(context.Context, *MsgCreateGauge) (*MsgCreateGaugeResponse, error)
	ExternalRewardsLockers(context.Context, *ActivateExternalRewardsLockers) (*ActivateExternalRewardsLockersResponse, error)
	ExternalRewardsVault(context.Context, *ActivateExternalRewardsVault) (*ActivateExternalRewardsVaultResponse, error)
	ExternalRewardsLend(context.Context, *ActivateExternalRewardsLend) (*ActivateExternalRewardsLendResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateGauge(ctx context.Context, req *MsgCreateGauge) (*MsgCreateGaugeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGauge not implemented")
}
func (*UnimplementedMsgServer) ExternalRewardsLockers(ctx context.Context, req *ActivateExternalRewardsLockers) (*ActivateExternalRewardsLockersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExternalRewardsLockers not implemented")
}
func (*UnimplementedMsgServer) ExternalRewardsVault(ctx context.Context, req *ActivateExternalRewardsVault) (*ActivateExternalRewardsVaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExternalRewardsVault not implemented")
}
func (*UnimplementedMsgServer) ExternalRewardsLend(ctx context.Context, req *ActivateExternalRewardsLend) (*ActivateExternalRewardsLendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExternalRewardsLend not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateGauge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateGauge)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateGauge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aether.rewards.v1beta1.Msg/CreateGauge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateGauge(ctx, req.(*MsgCreateGauge))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExternalRewardsLockers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateExternalRewardsLockers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExternalRewardsLockers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aether.rewards.v1beta1.Msg/ExternalRewardsLockers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExternalRewardsLockers(ctx, req.(*ActivateExternalRewardsLockers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExternalRewardsVault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateExternalRewardsVault)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExternalRewardsVault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aether.rewards.v1beta1.Msg/ExternalRewardsVault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExternalRewardsVault(ctx, req.(*ActivateExternalRewardsVault))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExternalRewardsLend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateExternalRewardsLend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExternalRewardsLend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aether.rewards.v1beta1.Msg/ExternalRewardsLend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExternalRewardsLend(ctx, req.(*ActivateExternalRewardsLend))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aether.rewards.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGauge",
			Handler:    _Msg_CreateGauge_Handler,
		},
		{
			MethodName: "ExternalRewardsLockers",
			Handler:    _Msg_ExternalRewardsLockers_Handler,
		},
		{
			MethodName: "ExternalRewardsVault",
			Handler:    _Msg_ExternalRewardsVault_Handler,
		},
		{
			MethodName: "ExternalRewardsLend",
			Handler:    _Msg_ExternalRewardsLend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aether/rewards/v1beta1/tx.proto",
}

func (m *MsgCreateGauge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateGauge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateGauge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AppId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x40
	}
	if m.Kind != nil {
		{
			size := m.Kind.Size()
			i -= size
			if _, err := m.Kind.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.StartTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.StartTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintTx(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x32
	if m.TotalTriggers != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TotalTriggers))
		i--
		dAtA[i] = 0x28
	}
	{
		size, err := m.DepositAmount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	n3, err3 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.TriggerDuration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.TriggerDuration):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintTx(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x1a
	if m.GaugeTypeId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GaugeTypeId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateGauge_LiquidityMetaData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateGauge_LiquidityMetaData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LiquidityMetaData != nil {
		{
			size, err := m.LiquidityMetaData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *MsgCreateGaugeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateGaugeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateGaugeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *WhitelistAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AssetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AssetId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RemoveWhitelistAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveWhitelistAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemoveWhitelistAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AssetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AssetId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveWhitelistAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveWhitelistAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveWhitelistAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *WhitelistAppIdVault) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WhitelistAppIdVault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WhitelistAppIdVault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RemoveWhitelistAppIdVault) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveWhitelistAppIdVault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RemoveWhitelistAppIdVault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistAppIdVaultResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistAppIdVaultResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistAppIdVaultResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveWhitelistAppIdVaultResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveWhitelistAppIdVaultResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveWhitelistAppIdVaultResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsLockers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsLockers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsLockers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinLockupTimeSeconds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinLockupTimeSeconds))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DurationDays != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationDays))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.TotalRewards.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.AssetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AssetId))
		i--
		dAtA[i] = 0x10
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsLockersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsLockersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsLockersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsVault) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsVault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsVault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MinLockupTimeSeconds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinLockupTimeSeconds))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x2a
	}
	if m.DurationDays != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationDays))
		i--
		dAtA[i] = 0x20
	}
	{
		size, err := m.TotalRewards.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.ExtendedPairId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ExtendedPairId))
		i--
		dAtA[i] = 0x10
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsVaultResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsVaultResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsVaultResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsLend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsLend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsLend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x52
	}
	if m.MinLockupTimeSeconds != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MinLockupTimeSeconds))
		i--
		dAtA[i] = 0x48
	}
	if m.DurationDays != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationDays))
		i--
		dAtA[i] = 0x40
	}
	if m.MasterPoolId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MasterPoolId))
		i--
		dAtA[i] = 0x38
	}
	{
		size, err := m.TotalRewards.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.CSwapMinLockAmount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CSwapMinLockAmount))
		i--
		dAtA[i] = 0x28
	}
	if m.CSwapAppId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CSwapAppId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.AssetId) > 0 {
		dAtA9 := make([]byte, len(m.AssetId)*10)
		var j8 int
		for _, num := range m.AssetId {
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		i -= j8
		copy(dAtA[i:], dAtA9[:j8])
		i = encodeVarintTx(dAtA, i, uint64(j8))
		i--
		dAtA[i] = 0x1a
	}
	if m.CPoolId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CPoolId))
		i--
		dAtA[i] = 0x10
	}
	if m.AppMappingId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppMappingId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ActivateExternalRewardsLendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActivateExternalRewardsLendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActivateExternalRewardsLendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateGauge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GaugeTypeId != 0 {
		n += 1 + sovTx(uint64(m.GaugeTypeId))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.TriggerDuration)
	n += 1 + l + sovTx(uint64(l))
	l = m.DepositAmount.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.TotalTriggers != 0 {
		n += 1 + sovTx(uint64(m.TotalTriggers))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.StartTime)
	n += 1 + l + sovTx(uint64(l))
	if m.Kind != nil {
		n += m.Kind.Size()
	}
	if m.AppId != 0 {
		n += 1 + sovTx(uint64(m.AppId))
	}
	return n
}

func (m *MsgCreateGauge_LiquidityMetaData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LiquidityMetaData != nil {
		l = m.LiquidityMetaData.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}
func (m *MsgCreateGaugeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *WhitelistAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AssetId != 0 {
		n += 1 + sovTx(uint64(m.AssetId))
	}
	return n
}

func (m *RemoveWhitelistAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AssetId != 0 {
		n += 1 + sovTx(uint64(m.AssetId))
	}
	return n
}

func (m *MsgWhitelistAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveWhitelistAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *WhitelistAppIdVault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *RemoveWhitelistAppIdVault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWhitelistAppIdVaultResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveWhitelistAppIdVaultResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivateExternalRewardsLockers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	if m.AssetId != 0 {
		n += 1 + sovTx(uint64(m.AssetId))
	}
	l = m.TotalRewards.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.DurationDays != 0 {
		n += 1 + sovTx(uint64(m.DurationDays))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinLockupTimeSeconds != 0 {
		n += 1 + sovTx(uint64(m.MinLockupTimeSeconds))
	}
	return n
}

func (m *ActivateExternalRewardsLockersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivateExternalRewardsVault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	if m.ExtendedPairId != 0 {
		n += 1 + sovTx(uint64(m.ExtendedPairId))
	}
	l = m.TotalRewards.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.DurationDays != 0 {
		n += 1 + sovTx(uint64(m.DurationDays))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MinLockupTimeSeconds != 0 {
		n += 1 + sovTx(uint64(m.MinLockupTimeSeconds))
	}
	return n
}

func (m *ActivateExternalRewardsVaultResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *ActivateExternalRewardsLend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AppMappingId != 0 {
		n += 1 + sovTx(uint64(m.AppMappingId))
	}
	if m.CPoolId != 0 {
		n += 1 + sovTx(uint64(m.CPoolId))
	}
	if len(m.AssetId) > 0 {
		l = 0
		for _, e := range m.AssetId {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.CSwapAppId != 0 {
		n += 1 + sovTx(uint64(m.CSwapAppId))
	}
	if m.CSwapMinLockAmount != 0 {
		n += 1 + sovTx(uint64(m.CSwapMinLockAmount))
	}
	l = m.TotalRewards.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.MasterPoolId != 0 {
		n += 1 + sovTx(uint64(m.MasterPoolId))
	}
	if m.DurationDays != 0 {
		n += 1 + sovTx(uint64(m.DurationDays))
	}
	if m.MinLockupTimeSeconds != 0 {
		n += 1 + sovTx(uint64(m.MinLockupTimeSeconds))
	}
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *ActivateExternalRewardsLendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateGauge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateGauge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateGauge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GaugeTypeId", wireType)
			}
			m.GaugeTypeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GaugeTypeId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TriggerDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.TriggerDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DepositAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalTriggers", wireType)
			}
			m.TotalTriggers = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalTriggers |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiquidityMetaData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LiquidtyGaugeMetaData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Kind = &MsgCreateGauge_LiquidityMetaData{v}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateGaugeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateGaugeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateGaugeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetId", wireType)
			}
			m.AssetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveWhitelistAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveWhitelistAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveWhitelistAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetId", wireType)
			}
			m.AssetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveWhitelistAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveWhitelistAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveWhitelistAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WhitelistAppIdVault) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WhitelistAppIdVault: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WhitelistAppIdVault: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveWhitelistAppIdVault) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveWhitelistAppIdVault: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveWhitelistAppIdVault: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistAppIdVaultResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistAppIdVaultResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistAppIdVaultResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveWhitelistAppIdVaultResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveWhitelistAppIdVaultResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveWhitelistAppIdVaultResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsLockers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsLockers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsLockers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetId", wireType)
			}
			m.AssetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AssetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalRewards.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationDays", wireType)
			}
			m.DurationDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationDays |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLockupTimeSeconds", wireType)
			}
			m.MinLockupTimeSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinLockupTimeSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsLockersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsLockersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsLockersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsVault) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsVault: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsVault: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedPairId", wireType)
			}
			m.ExtendedPairId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExtendedPairId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalRewards.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationDays", wireType)
			}
			m.DurationDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationDays |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLockupTimeSeconds", wireType)
			}
			m.MinLockupTimeSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinLockupTimeSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsVaultResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsVaultResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsVaultResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsLend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsLend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsLend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppMappingId", wireType)
			}
			m.AppMappingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppMappingId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CPoolId", wireType)
			}
			m.CPoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CPoolId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AssetId = append(m.AssetId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AssetId) == 0 {
					m.AssetId = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AssetId = append(m.AssetId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetId", wireType)
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CSwapAppId", wireType)
			}
			m.CSwapAppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CSwapAppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CSwapMinLockAmount", wireType)
			}
			m.CSwapMinLockAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CSwapMinLockAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalRewards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TotalRewards.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterPoolId", wireType)
			}
			m.MasterPoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MasterPoolId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationDays", wireType)
			}
			m.DurationDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationDays |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinLockupTimeSeconds", wireType)
			}
			m.MinLockupTimeSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinLockupTimeSeconds |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActivateExternalRewardsLendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActivateExternalRewardsLendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActivateExternalRewardsLendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
